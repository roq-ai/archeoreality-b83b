generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model article {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content_manager_id String?  @db.Uuid
  content            String?
  created_at         DateTime @default(now()) @db.Timestamp(6)
  updated_at         DateTime @default(now()) @db.Timestamp(6)
  user               user?    @relation(fields: [content_manager_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model event {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  admin_id    String?  @db.Uuid
  description String?
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user?    @relation(fields: [admin_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model history {
  id                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  content_manager_id String?  @db.Uuid
  content            String?
  created_at         DateTime @default(now()) @db.Timestamp(6)
  updated_at         DateTime @default(now()) @db.Timestamp(6)
  user               user?    @relation(fields: [content_manager_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organization {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ticket {
  id            String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id       String?  @db.Uuid
  discount_code String?  @db.VarChar(255)
  created_at    DateTime @default(now()) @db.Timestamp(6)
  updated_at    DateTime @default(now()) @db.Timestamp(6)
  user          user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model tour {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String?  @db.Uuid
  trailer_link String?  @db.VarChar(255)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user         user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  article      article[]
  event        event[]
  history      history[]
  organization organization[]
  ticket       ticket[]
  tour         tour[]
}
